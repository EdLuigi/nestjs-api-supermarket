generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  registry  String    @unique
  password  String
  verified  Boolean   @default(false)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  userRoles  UserRole?
  EmailToken EmailToken?

  @@map("users")
}

model Role {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @map("updated_at")

  userRoles       UserRole[]
  rolePermissions RolePermission[]

  @@map("roles")
}

model Permission {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @map("updated_at")

  rolePermissions RolePermission[]

  @@map("permissions")
}

model UserRole {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  roleId    Int       @map("role_id")
  role      Role      @relation(fields: [roleId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  @@map("users_roles")
}

model RolePermission {
  id           Int        @id @default(autoincrement())
  roleId       Int        @map("role_id")
  role         Role       @relation(fields: [roleId], references: [id])
  permissionId Int        @map("permission_id")
  permission   Permission @relation(fields: [permissionId], references: [id])
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime?  @map("updated_at")

  @@unique([roleId, permissionId])
  @@map("roles_permissions")
}

model Supplier {
  id          Int       @id @default(autoincrement())
  name        String
  companyName String    @map("company_name")
  registry    String    @unique
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @map("updated_at")

  products Product[]

  @@map("suppliers")
}

model Product {
  id                 Int       @id @default(autoincrement())
  supplierId         Int       @map("supplier_id")
  supplier           Supplier  @relation(fields: [supplierId], references: [id])
  name               String
  description        String?
  stock              Int       @default(0)
  price              Decimal   @default(0)
  discountPercentage Int?      @default(0) @map("discount_percentage")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime? @map("updated_at")

  @@map("products")
}

model EmailToken {
  id        String   @id @default(uuid())
  userId    Int      @unique @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  email     String   @map("email")
  createdAt DateTime @default(now()) @map("created_at")
  dueDate   DateTime @default(now()) @map("due_date")

  @@map("email_tokens")
}
